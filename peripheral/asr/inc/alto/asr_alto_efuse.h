/*
 * Copyright (c) 2022 ASR Microelectronics (Shanghai) Co., Ltd. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef _ALTO_EFUSE_H_
#define _ALTO_EFUSE_H_

#include <stdint.h>
#include "asr_alto_port.h"

#ifdef __cplusplus
extern "C" {
#endif


//USER efuse addr 0xF0~0x1EF 0x200~0x25F

#define EFUSE_START_BLK 0
#define EFUSE_USER_BLKS 9
#define EFUSE_RD_BLKS 9
#define EFUSE_MAX_BLK   18

#define EFUSE_INTER_START_ADDR 0
#define EFUSE_USER_MAX_SIZE 352
#define USER_BLK_START_ADDR0 0xF0
#define USER_BLK_END_ADDR0 0x1EF
#define USER_BLK0_LEN 256
#define USER_BLK_START_ADDR1 0x200
#define USER_BLK_END_ADDR1 0x25F
#define USER_BLK1_LEN 96

#define    EFUSE_USER_BLK0_ADDR  0xF0
#define    EFUSE_USER_BLK0_LENTH 256
#define EFUSE_USER_BLK1_ADDR (0x200)
#define EFUSE_USER_BLK1_LENTH 28
#define EFUSE_USER_BLK2_ADDR (EFUSE_USER_BLK1_ADDR+EFUSE_USER_BLK1_LENTH)
#define EFUSE_USER_BLK2_LENTH 32
#define EFUSE_USER_BLK3_ADDR (EFUSE_USER_BLK2_ADDR+EFUSE_USER_BLK2_LENTH)
#define EFUSE_USER_BLK3_LENTH 20
#define EFUSE_USER_BLK4_ADDR (EFUSE_USER_BLK3_ADDR+EFUSE_USER_BLK3_LENTH)
#define EFUSE_USER_BLK4_LENTH 11
#define EFUSE_USER_BLK5_ADDR (EFUSE_USER_BLK4_ADDR+EFUSE_USER_BLK4_LENTH)
#define EFUSE_USER_BLK5_LENTH 2
#define EFUSE_USER_BLK6_ADDR (EFUSE_USER_BLK5_ADDR+EFUSE_USER_BLK5_LENTH)
#define EFUSE_USER_BLK6_LENTH 1
#define EFUSE_USER_BLK7_ADDR (EFUSE_USER_BLK6_ADDR+EFUSE_USER_BLK6_LENTH)
#define EFUSE_USER_BLK7_LENTH 1
#define EFUSE_USER_BLK8_ADDR (EFUSE_USER_BLK7_ADDR+EFUSE_USER_BLK7_LENTH)
#define EFUSE_USER_BLK8_LENTH 1

#define EFUSE_INVALID_ADDR 0xFFFF
#define EFUSE_ADDR0 0xF0
#define EFUSE_ADDR1 0x08
#define EFUSE_ADDR2 0x5C
#define EFUSE_ADDR3 0x28
#define EFUSE_ADDR4 0x85
#define EFUSE_ADDR5 0xBE
#define EFUSE_ADDR6 0x96
#define EFUSE_ADDR7 0xEF
#define EFUSE_ADDR8 0x1F1

#define    EFUSE_MAGIC_NUM_ADDR  0
#define    EFUSE_MAGIC_NUM_LENTH 4
#define EFUSE_BOOT_EN_ADDR (EFUSE_MAGIC_NUM_ADDR+EFUSE_MAGIC_NUM_LENTH)
#define EFUSE_BOOT_EN_LENTH 4
#define EFUSE_CERT_KEY_ADDR (EFUSE_BOOT_EN_ADDR+EFUSE_BOOT_EN_LENTH)
#define EFUSE_CERT_KEY_LENTH 32
//#define EFUSE_FLASH_KEY_ADDR (EFUSE_CERT_KEY_ADDR+EFUSE_CERT_KEY_LEN)
//#define EFUSE_FLASH_KEY_LENTH 4
#define EFUSE_FLASH_ENC_KEY_ADDR (EFUSE_CERT_KEY_ADDR+EFUSE_CERT_KEY_LENTH)
#define EFUSE_FLASH_ENC_KEY_LENTH (4)
#define EFUSE_FLASH_ENC_EN_ADDR (EFUSE_FLASH_ENC_KEY_ADDR+EFUSE_USER_BLK4_LENTH)
#define EFUSE_FLASH_ENC_EN_LENTH 4
#define EFUSE_UART_LOG_EN_ADDR (EFUSE_FLASH_ENC_EN_ADDR+EFUSE_FLASH_ENC_EN_LENTH)
#define EFUSE_UART_LOG_EN_LENTH 1

#define EFUSE_FLASH_TAG_LENTH 9 //(4+4+1)

#define EFUSE_MAC0_ADDR (EFUSE_UART_LOG_EN_ADDR+EFUSE_UART_LOG_EN_LENTH)
#define EFUSE_MAC0_LENTH 6


#define EFUSE_RFCALI_ADDR (EFUSE_MAC0_ADDR+EFUSE_MAC0_LENTH)
#define EFUSE_RFCALI_LENTH 36
#define EFUSE_BLE_RFCALI_ADDR (EFUSE_MAC0_ADDR+EFUSE_MAC0_LENTH)
#define EFUSE_BLE_RFCALI_LENTH 3

#define EFUSE_CALI0_LENTH 39    //(36+3)

#define EFUSE_MAC1_ADDR (EFUSE_BLE_RFCALI_ADDR+EFUSE_BLE_RFCALI_LENTH)
#define EFUSE_MAC1_LENTH 6
#define EFUSE_MAC2_ADDR (EFUSE_MAC1_ADDR+EFUSE_MAC1_LENTH)
#define EFUSE_MAC2_LENTH 6
#define EFUSE_TX_RFCALI1_ADDR (EFUSE_MAC2_ADDR+EFUSE_MAC2_LENTH)
#define EFUSE_TX_RFCALI1_LENTH 12 //
#define EFUSE_TX_RFCALI2_ADDR (EFUSE_TX_RFCALI1_ADDR+EFUSE_TX_RFCALI1_LENTH)
#define EFUSE_TX_RFCALI2_LENTH 12 //
#define EFUSE_BLE_RFCALI1_ADDR (EFUSE_TX_RFCALI2_ADDR+EFUSE_TX_RFCALI2_LENTH)
#define EFUSE_BLE_RFCALI1_LENTH 3 //
#define EFUSE_BLE_RFCALI2_ADDR (EFUSE_BLE_RFCALI1_ADDR+EFUSE_BLE_RFCALI1_LENTH)
#define EFUSE_BLE_RFCALI2_LENTH 3 //
#define EFUSE_MAC0_TAG_ADDR (EFUSE_BLE_RFCALI2_ADDR+EFUSE_BLE_RFCALI2_LENTH)
#define EFUSE_MAC0_TAG_LENTH 1
#define EFUSE_MAC1_TAG_ADDR (EFUSE_MAC0_TAG_ADDR+EFUSE_MAC0_TAG_LENTH)
#define EFUSE_MAC1_TAG_LENTH 1
#define EFUSE_MAC2_TAG_ADDR (EFUSE_MAC1_TAG_ADDR+EFUSE_MAC1_TAG_LENTH)
#define EFUSE_MAC2_TAG_LENTH 1
#define EFUSE_FREQ_ERR_L_ADDR (EFUSE_MAC2_TAG_ADDR+EFUSE_MAC2_TAG_LENTH)
#define EFUSE_FREQ_ERR_L_LENTH 1
#define EFUSE_FREQ_ERR_H_ADDR (EFUSE_FREQ_ERR_L_ADDR+EFUSE_MAC0_TAG_LENTH)
#define EFUSE_FREQ_ERR_H_LENTH 1

#define EFUSE_MAC_CALI_LENTH 47 //(36+3)

#define EFUSE_DIGLDO_ADDR  (EFUSE_FREQ_ERR_H_ADDR+EFUSE_FREQ_ERR_H_LENTH)
#define EFUSE_DIGLDO_LENTH 1

#define EFUSE_ID_ADDR (EFUSE_DIGLDO_ADDR+EFUSE_DIGLDO_LENTH)
#define EFUSE_ID_LENTH 2

#define EFUSE_FT_ADDR (EFUSE_ID_ADDR+EFUSE_ID_LENTH)
#define EFUSE_FT_LENTH 12
#define EFUSE_ID_FT_LENTH 14


#define MAGIC_NUM_EFUSE_ADDR 0x0
#define EFUSE_BOOT_EN_EFUSE_ADDR 0x24
#define CERT_KEY_EFUSE_ADDR 0x3C
#define FLASH_ENC_KEY_EFUSE_ADDR 0x7C
//#define FLASH_ENC_EN_EFUSE_ADDR 0x80
//#define UART_LOG_EN_EFUSE_ADDR 0x84
#define MAC0_EFUSE_ADDR 0x90
#define RFCALI_START_FUSE_ADDR   0x97
#define MAC1_RFCALI_START_EFUSE_ADDR 0xC0
#define DIGLDO_EFUSE_ADDR 0x1F0
//#define MIDEA_EFUSE_ADDR 0x1F2
#define MIDEA_FT_EFUSE_ADDR 0x1F2

typedef struct efuse_blk_struct
{
    uint16_t vir_hadr;
    uint16_t efuse_adr;
    uint16_t size;
}efuse_blk_struct_t;

extern efuse_blk_struct_t efuse_blk[EFUSE_MAX_BLK];
#endif
#ifdef __cplusplus
}
#endif




